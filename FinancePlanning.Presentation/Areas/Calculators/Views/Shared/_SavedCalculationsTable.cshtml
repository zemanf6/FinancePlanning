@model IEnumerable<dynamic>
@inject FinancePlanning.Infrastructure.Interfaces.ICurrencyFormatter CurrencyFormatter

@{
    var deleteAllAction = ViewData["DeleteAllAction"] as string ?? "DeleteAllCalculations";
    var loadAction = ViewData["LoadAction"] as string ?? "LoadCalculation";
    var deleteAction = ViewData["DeleteAction"] as string ?? "DeleteCalculation";
    var backAction = ViewData["BackAction"] as string ?? "Index";
    var title = ViewData["Title"] as string ?? "Saved Calculations";
    var hasFrequency = (bool?)ViewData["HasFrequency"] ?? false;
    var hasCompoundings = (bool?)ViewData["HasCompoundings"] ?? false;
}

<div class="container mt-4">
    <h2 class="mb-4">@title</h2>

    <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">
        <a asp-action="@backAction" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Calculator
        </a>

        <form asp-action="@deleteAllAction" method="post" onsubmit="return confirm('Are you sure you want to delete ALL saved calculations?');">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger">
                <i class="bi bi-trash-fill"></i> Delete All
            </button>
        </form>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">You have no saved calculations yet.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Principal</th>
                        <th>Interest Rate (%)</th>
                        <th>Duration</th>
                        @if (hasFrequency)
                        {
                            <th>Frequency</th>
                        }
                        @if (hasCompoundings)
                        {
                            <th>Compoundings/Yr</th>
                        }
                        <th>Interest</th>
                        <th>Total</th>
                        <th>Note</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@CurrencyFormatter.Format(item.Principal, item.SelectedCurrency)</td>
                            <td>@item.InterestRate</td>
                            <td>@item.Duration @item.Unit</td>

                            @if (hasFrequency)
                            {
                                <td>@item.Frequency</td>
                            }
                            @if (hasCompoundings)
                            {
                                <td>@item.CompoundingPerYear</td>
                            }

                            <td>@CurrencyFormatter.Format(item.CalculatedInterest, item.SelectedCurrency)</td>
                            <td>@CurrencyFormatter.Format(item.TotalAmount, item.SelectedCurrency)</td>
                            <td>
                                @if (!string.IsNullOrWhiteSpace(item.Note as string))
                                {
                                    <span data-bs-toggle="tooltip" title="@item.Note">
                                        @(((string)item.Note).Length > 30 ? ((string)item.Note).Substring(0, 30) + "..." : item.Note)
                                    </span>
                                }
                            </td>
                            <td>@item.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                            <td style="white-space: nowrap; min-width: 140px;">
                                <form asp-action="@loadAction" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@item.Id" />
                                    <button type="submit" class="btn btn-sm btn-success mb-1">
                                        <i class="bi bi-box-arrow-in-down"></i> Load
                                    </button>
                                </form>

                                <form asp-action="@deleteAction" method="post" class="d-inline ms-1" onsubmit="return confirm('Are you sure you want to delete this calculation?');">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@item.Id" />
                                    <button type="submit" class="btn btn-sm btn-danger mb-1">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>